{"version":3,"sources":["Components/Bars2.jsx","Components/Bars.jsx","Components/Plot3.jsx","Components/history.jsx","Components/Slider.jsx","Components/Home.jsx","Components/RouteHandler.jsx","App.js","reportWebVitals.js","index.js"],"names":["Bars2","Bars","props","boxRef","useRef","Delay","array","val","algo","timeouts","style","gridTemplateColumns","useEffect","reset","forEach","e","clearTimeout","duhh","useSpring","config","duration","to","opacity","animationDelay","from","n","defColor","bars","current","children","x","length","push","f","setTimeout","backgroundColor","className","onClick","arr","swapArray","i","key","j","tmp","min_idx","swapColor1","swapColor2","lastColor","ctr","last","height","console","log","animater","ref","map","index","li","Plot3","history","Slider","useState","setVal","setArray","setDelay","valChangeHandler","target","value","Math","floor","random","type","step","min","max","defaultValue","onChange","Home","RouteHandler","exact","path","render","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4aece5db.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Style.css\";\nimport { useTransition, animated } from \"react-spring\";\nimport { render } from \"react-dom\";\nimport shuffle from \"lodash/shuffle\";\nimport data from \"./data\";\nfunction Bars2(props) {\n  const [rows, set] = useState(data);\n  useEffect(() => void setInterval(() => set(shuffle), 2000), []);\n\n  let height = 0;\n  const transitions = useTransition(\n    rows.map((data) => ({\n      ...data,\n      y: (height += data.height) - data.height,\n    })),\n    (d) => d.name,\n    {\n      from: { height: 0, opacity: 0 },\n      leave: { height: 0, opacity: 0 },\n      enter: ({ y, height }) => ({ y, height, opacity: 1 }),\n      update: ({ y, height }) => ({ y, height }),\n    }\n  );\n\n  return (\n    <div class=\"list\" style={{ height }}>\n      {transitions.map(({ item, props: { y, ...rest }, key }, index) => (\n        <animated.div\n          key={key}\n          class=\"card\"\n          style={{\n            zIndex: data.length - index,\n            transform: y.interpolate((y) => `translate3d(0,${y}px,0)`),\n            ...rest,\n          }}\n        >\n          <div class=\"cell\">\n            <div class=\"details\" style={{ backgroundImage: item.css }} />\n          </div>\n        </animated.div>\n      ))}\n    </div>\n  );\n}\n\nexport default Bars2;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Style.css\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Transition } from \"react-spring/renderprops\";\n\nfunction Bars(props) {\n  const boxRef = useRef(null);\n  const { Delay, array, val, algo } = props;\n  var timeouts = [];\n\n  let style = {\n    gridTemplateColumns: `repeat(${val},2fr)`,\n  };\n\n  useEffect(() => {\n    reset(val, \"#fff\");\n    timeouts.forEach((e) => clearTimeout(e));\n    return () => {\n      timeouts.forEach((e) => clearTimeout(e));\n    };\n    // crazysam92\n    // 5Jan1992\n  }, [array, Delay]);\n\n  const duhh = useSpring({\n    config: { duration: 1000 },\n    to: {\n      opacity: 1,\n    },\n    animationDelay: 300,\n    from: {\n      opacity: 0,\n    },\n  });\n\n  const reset = (n, defColor) => {\n    const bars = boxRef.current.children;\n    const style = [];\n    for (let x = 0; x < bars.length; x++) {\n      style.push(bars[x].style);\n    }\n    if (style.length)\n      for (let f = 0; f < n; f++) {\n        setTimeout(() => {\n          style[f].backgroundColor = defColor;\n        }, 2 * f);\n      }\n  };\n\n  const animater = (\n    swapArray,\n    swapColor1,\n    swapColor2,\n    lastColor,\n    defColor,\n    n\n  ) => {\n    const bars = boxRef.current.children;\n    let ctr = 0;\n    let last = n - 1;\n    const style = [];\n    for (let x = 0; x < bars.length; x++) {\n      style.push(bars[x].style);\n    }\n\n    //reset\n    reset(n, \"#fff\");\n\n    for (let i = 0; i < swapArray.length; i++, ctr++) {\n      timeouts.push(\n        //blue and white appear\n        setTimeout(() => {\n          style[swapArray[i][0]].backgroundColor = swapColor1;\n          style[swapArray[i][1]].backgroundColor = swapColor2;\n        }, Delay * ctr)\n      );\n      timeouts.push(\n        //both swaps height\n        setTimeout(() => {\n          let tmp = style[swapArray[i][0]].height;\n          style[swapArray[i][0]].height = style[swapArray[i][1]].height;\n          style[swapArray[i][1]].height = tmp;\n        }, Delay * ctr)\n      );\n      timeouts.push(\n        //both turns white\n        setTimeout(() => {\n          style[swapArray[i][0]].backgroundColor = defColor;\n          style[swapArray[i][1]].backgroundColor = defColor;\n          if (i === swapArray.length - 1) {\n            for (let f = 0; f < n; f++) {\n              setTimeout(() => {\n                style[n - f - 1].backgroundColor = lastColor;\n                console.log(\"ni chala\", last);\n                // style[n - f - 1].boxShadow =\n                //   \"1px 1px 10px #ec4e76, -1px -1px 10px #ec4e76\";\n              }, 10 * f);\n            }\n          }\n        }, Delay * ctr + Delay / 2)\n      );\n    }\n  };\n\n  const clickHandler = (e) => {\n    let n = array.length;\n    let arr = [...array];\n    let swapArray = [];\n\n    switch (algo) {\n      case \"ins\":\n        for (let i = 1; i < n; i++) {\n          let key = arr[i];\n          let j = i - 1;\n          while (j >= 0 && arr[j] > key) {\n            arr[j + 1] = arr[j];\n            swapArray.push([j + 1, j]);\n            j = j - 1;\n          }\n          arr[j + 1] = key;\n        }\n        break;\n      case \"bub\":\n        for (let i = 0; i < n; i++) {\n          for (let j = 0; j < n - i - 1; j++)\n            if (arr[j] > arr[j + 1]) {\n              let tmp = arr[j];\n              arr[j] = arr[j + 1];\n              arr[j + 1] = tmp;\n              swapArray.push([j, j + 1]);\n            }\n        }\n        break;\n      case \"sel\":\n        for (let i = 0, min_idx; i < n - 1; i++) {\n          min_idx = i;\n          for (let j = i + 1; j < n; j++)\n            if (arr[j] < arr[min_idx]) min_idx = j;\n          swapArray.push([min_idx, i]);\n          let tmp = arr[i];\n          arr[i] = arr[min_idx];\n          arr[min_idx] = tmp;\n        }\n        break;\n      default:\n        break;\n    }\n    animater(swapArray, \"#4cc9f0\", \"#4cc9f0\", \"#6be4d8\", \"#fff\", n);\n  };\n\n  return (\n    <>\n      <button className=\"sortbtn backbtn\" onClick={clickHandler}>\n        Sort\n      </button>\n      <div className=\"box\" ref={boxRef} style={style}>\n        {array.map((val, index) => (\n          <animated.li\n            style={{\n              ...duhh,\n              backgroundColor: \"#fff\",\n              height: `${25 + val * 5}px`,\n            }}\n            key={index}\n            className=\"bar\"\n          ></animated.li>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Bars;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Bars3 from \"./Bars3\";\nimport Graph from \"./graph\";\n\nfunction Plot3(props) {\n  let { val } = props;\n  const [Data, setData] = useState([]);\n  const [SwapData, setSwapData] = useState([]);\n  const [count, setcount] = useState(0);\n\n  useEffect(() => {\n    setData([...numToObjectData(val)]);\n  }, [val]);\n\n  const numToObjectData = () => {\n    let data = [];\n    for (let i = 0; i < val; i++) data[i] = Math.floor(Math.random() * 101);\n    return data;\n  };\n\n  const clickHandler = () => {\n    let array = [];\n    var n = Data.length;\n    var arr = [...Data];\n    for (let i = 0; i < n; i++)\n      for (let j = 0; j < n - i - 1; j++)\n        if (arr[j] > arr[j + 1]) {\n          let tmp = arr[j];\n          arr[j] = arr[j + 1];\n          arr[j + 1] = tmp;\n          array.push([j, j + 1]);\n        }\n    setSwapData([...array]);\n  };\n\n  return (\n    <>\n      <Bars3 array={Data} val={val} />\n      <button id=\"button\" onClick={clickHandler}>\n        Sort\n      </button>\n    </>\n  );\n}\n\nexport default Plot3;\n","import { createBrowserHistory as history } from \"history\";\n\nexport default history();\n","import React, { useState, useEffect } from \"react\";\nimport Bars2 from \"./Bars2\";\nimport Bars from \"./Bars\";\nimport Plot3 from \"./Plot3\";\nimport Sort from \"./Sort\";\nimport history from \"./history\";\nimport \"./Style.css\";\n\nfunction Slider(props) {\n  const [val, setVal] = useState(100);\n  const [array, setArray] = useState([]);\n  const [Delay, setDelay] = useState(50);\n\n  const valChangeHandler = (e) => {\n    var bars = [];\n    for (let i = 0; i < e.target.value; i++)\n      bars[i] = Math.floor(Math.random() * 101);\n    setVal(e.target.value);\n    setArray([...bars]);\n  };\n\n  useEffect(() => {\n    valChangeHandler({ target: { value: 50 } });\n  }, []);\n  const speedChangeHandler = (e) => {\n    setDelay(e.target.value);\n    valChangeHandler({ target: { value: val } });\n    setVal(val);\n  };\n\n  return (\n    <div className=\"container\">\n      <button className=\"backbtn\" onClick={() => history.push(\"/\")}>\n        Back\n      </button>\n      <span className=\"datatext\">\n        <span className=\"text1\">Data Set{\"  \"}</span>\n        <input\n          type=\"range\"\n          step=\"1\"\n          min=\"50\"\n          max=\"150\"\n          className=\"slider\"\n          defaultValue=\"100\"\n          onChange={valChangeHandler}\n        />\n      </span>\n      {/* <Plot3 val={val} /> */}\n      <span className=\"datatext\">\n        <span className=\"text1 text2\">Speed{\"  \"}</span>\n        <input\n          type=\"range\"\n          step=\"5\"\n          min=\"1\"\n          max=\"500\"\n          className=\"slider2\"\n          defaultValue=\"20\"\n          onChange={speedChangeHandler}\n        ></input>\n      </span>\n      <Bars array={array} Delay={Delay} val={val} algo={props.algo} />\n    </div>\n  );\n}\n\nexport default Slider;\n","import React from \"react\";\nimport \"./Style.css\";\nimport history from \"./history\";\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <h1 className=\"heading\">Sort-Visualizer</h1>\n      <div className=\"btndiv\">\n        <button className=\"btn\" onClick={() => history.push(\"/ins\")}>\n          Insertion Sort\n        </button>\n        <button className=\"btn\" onClick={() => history.push(\"/bub\")}>\n          Bubble Sort\n        </button>\n        <button className=\"btn\" onClick={() => history.push(\"/sel\")}>\n          Selection Sort\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import { Router, Switch, Route } from \"react-router-dom\";\nimport history from \"./history\";\nimport React from \"react\";\nimport Home from \"./Home\";\nimport Slider from \"./Slider\";\n\nfunction RouteHandler() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route\n          exact\n          path=\"/ins\"\n          render={() => <Slider algo={\"ins\"}></Slider>}\n        ></Route>\n        <Route\n          exact\n          path=\"/bub\"\n          render={() => <Slider algo={\"bub\"}></Slider>}\n        ></Route>\n        <Route\n          exact\n          path=\"/sel\"\n          render={() => <Slider algo={\"sel\"}></Slider>}\n        ></Route>\n        <Route exact path=\"/\" component={Home}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default RouteHandler;\n","import Slider from \"./Components/Slider\";\nimport Plot from \"./Components/Plot\";\nimport \"./App.css\";\nimport Bars2 from \"./Components/Bars2\";\nimport Bars3 from \"./Components/Bars3\";\nimport Container from \"./Components/Container\";\nimport Home from \"./Components/Home\";\nimport RouteHandler from \"./Components/RouteHandler\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RouteHandler />\n      {/* <Home /> */}\n      {/* <Container /> */}\n      {/* <Slider /> */}\n      {/* <Demo /> */}\n      {/* <Plot /> */}\n      {/* <Bars2 /> */}\n      {/* <Bars3 /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}